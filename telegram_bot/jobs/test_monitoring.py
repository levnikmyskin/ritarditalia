import MySQLdb
import unittest
from datetime import datetime, timedelta
from telegram_bot.jobs.monitoring import Train, _get_interval_days, interval_pattern, _is_daily_update_to_be_sent, \
    _is_in_day_interval, days_mapping
from config import *


class TestMonitoring(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        cls.conn = MySQLdb.connect(passwd=DB_PASSWORD, user=DB_USER, host=DB_HOST, db=DB_NAME)
        cls.train_status = {'tipoTreno': 'PG', 'orientamento': None, 'codiceCliente': 2, 'fermateSoppresse': None, 'dataPartenza': None, 'fermate': [{'orientamento': None, 'kcNumTreno': None, 'stazione': 'MINTURNO', 'id': 'S09150', 'listaCorrispondenze': None, 'programmata': 1549190280000, 'programmataZero': None, 'effettiva': 1549190460000, 'ritardo': 3, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549190280000, 'arrivo_teorico': None, 'isNextChanged': False, 'partenzaReale': 1549190460000, 'arrivoReale': None, 'ritardoPartenza': 3, 'ritardoArrivo': 0, 'progressivo': 1, 'binarioEffettivoArrivoCodice': None, 'binarioEffettivoArrivoTipo': None, 'binarioEffettivoArrivoDescrizione': None, 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': None, 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '1', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '1', 'tipoFermata': 'P', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'FORMIA-GAETA', 'id': 'S08640', 'listaCorrispondenze': None, 'programmata': 1549190760000, 'programmataZero': None, 'effettiva': 1549190850000, 'ritardo': 2, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549190880000, 'arrivo_teorico': 1549190760000, 'isNextChanged': False, 'partenzaReale': 1549191000000, 'arrivoReale': 1549190850000, 'ritardoPartenza': 2, 'ritardoArrivo': 2, 'progressivo': 2, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '3', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '3', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '3', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '3', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'ITRI', 'id': 'S08607', 'listaCorrispondenze': None, 'programmata': 1549191180000, 'programmataZero': None, 'effettiva': 1549191240000, 'ritardo': 1, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549191240000, 'arrivo_teorico': 1549191180000, 'isNextChanged': False, 'partenzaReale': 1549191330000, 'arrivoReale': 1549191240000, 'ritardoPartenza': 2, 'ritardoArrivo': 1, 'progressivo': 3, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '2', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '2', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '2', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '2', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'FONDI - SPERLONGA', 'id': 'S08606', 'listaCorrispondenze': None, 'programmata': 1549191660000, 'programmataZero': None, 'effettiva': 1549191660000, 'ritardo': 0, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549191720000, 'arrivo_teorico': 1549191660000, 'isNextChanged': False, 'partenzaReale': 1549191780000, 'arrivoReale': 1549191660000, 'ritardoPartenza': 1, 'ritardoArrivo': 0, 'progressivo': 4, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '3', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '3', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '3', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '3', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'MONTE S.BIAGIO', 'id': 'S08605', 'listaCorrispondenze': None, 'programmata': 1549192020000, 'programmataZero': None, 'effettiva': 1549192020000, 'ritardo': 0, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549192080000, 'arrivo_teorico': 1549192020000, 'isNextChanged': False, 'partenzaReale': 1549192110000, 'arrivoReale': 1549192020000, 'ritardoPartenza': 1, 'ritardoArrivo': 0, 'progressivo': 5, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '3', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '3', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '3', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '3', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'PRIVERNO FOSSANOVA', 'id': 'S08604', 'listaCorrispondenze': None, 'programmata': 1549192680000, 'programmataZero': None, 'effettiva': 1549192650000, 'ritardo': -1, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549192740000, 'arrivo_teorico': 1549192680000, 'isNextChanged': False, 'partenzaReale': 1549192830000, 'arrivoReale': 1549192650000, 'ritardoPartenza': 2, 'ritardoArrivo': -1, 'progressivo': 6, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '5', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '5', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '5', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '5', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'SEZZE ROMANO', 'id': 'S08609', 'listaCorrispondenze': None, 'programmata': 1549193280000, 'programmataZero': None, 'effettiva': 1549193220000, 'ritardo': -1, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549193340000, 'arrivo_teorico': 1549193280000, 'isNextChanged': False, 'partenzaReale': 1549193400000, 'arrivoReale': 1549193220000, 'ritardoPartenza': 1, 'ritardoArrivo': -1, 'progressivo': 7, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '5', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '5', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '5', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '5', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'LATINA', 'id': 'S08608', 'listaCorrispondenze': None, 'programmata': 1549193760000, 'programmataZero': None, 'effettiva': 1549194000000, 'ritardo': 4, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549193880000, 'arrivo_teorico': 1549193760000, 'isNextChanged': False, 'partenzaReale': 1549194150000, 'arrivoReale': 1549194000000, 'ritardoPartenza': 5, 'ritardoArrivo': 4, 'progressivo': 8, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '1', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '1', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '1', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '1', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 0, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'CISTERNA DI LATINA', 'id': 'S08603', 'listaCorrispondenze': None, 'programmata': 1549194300000, 'programmataZero': None, 'effettiva': 1549194420000, 'ritardo': 2, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549194420000, 'arrivo_teorico': 1549194300000, 'isNextChanged': False, 'partenzaReale': 1549194540000, 'arrivoReale': 1549194420000, 'ritardoPartenza': 2, 'ritardoArrivo': 2, 'progressivo': 9, 'binarioEffettivoArrivoCodice': '0', 'binarioEffettivoArrivoTipo': '0', 'binarioEffettivoArrivoDescrizione': '3', 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '3', 'binarioEffettivoPartenzaCodice': '0', 'binarioEffettivoPartenzaTipo': '0', 'binarioEffettivoPartenzaDescrizione': '3', 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '3', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 1, 'actualFermataType': 1}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'CAMPOLEONE', 'id': 'S08602', 'listaCorrispondenze': None, 'programmata': 1549195020000, 'programmataZero': None, 'effettiva': None, 'ritardo': 0, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549195080000, 'arrivo_teorico': 1549195020000, 'isNextChanged': False, 'partenzaReale': None, 'arrivoReale': None, 'ritardoPartenza': 0, 'ritardoArrivo': 0, 'progressivo': 10, 'binarioEffettivoArrivoCodice': None, 'binarioEffettivoArrivoTipo': None, 'binarioEffettivoArrivoDescrizione': None, 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '4', 'binarioEffettivoPartenzaCodice': None, 'binarioEffettivoPartenzaTipo': None, 'binarioEffettivoPartenzaDescrizione': None, 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '4', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 2, 'actualFermataType': 0}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'POMEZIA - S.PALOMBA', 'id': 'S08601', 'listaCorrispondenze': None, 'programmata': 1549195440000, 'programmataZero': None, 'effettiva': None, 'ritardo': 0, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': 1549195500000, 'arrivo_teorico': 1549195440000, 'isNextChanged': False, 'partenzaReale': None, 'arrivoReale': None, 'ritardoPartenza': 0, 'ritardoArrivo': 0, 'progressivo': 11, 'binarioEffettivoArrivoCodice': None, 'binarioEffettivoArrivoTipo': None, 'binarioEffettivoArrivoDescrizione': None, 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '2', 'binarioEffettivoPartenzaCodice': None, 'binarioEffettivoPartenzaTipo': None, 'binarioEffettivoPartenzaDescrizione': None, 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': '2', 'tipoFermata': 'F', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 2, 'actualFermataType': 0}, {'orientamento': None, 'kcNumTreno': None, 'stazione': 'ROMA TERMINI', 'id': 'S08409', 'listaCorrispondenze': None, 'programmata': 1549196640000, 'programmataZero': None, 'effettiva': None, 'ritardo': 0, 'partenzaTeoricaZero': None, 'arrivoTeoricoZero': None, 'partenza_teorica': None, 'arrivo_teorico': 1549196640000, 'isNextChanged': False, 'partenzaReale': None, 'arrivoReale': None, 'ritardoPartenza': 0, 'ritardoArrivo': 0, 'progressivo': 14, 'binarioEffettivoArrivoCodice': None, 'binarioEffettivoArrivoTipo': None, 'binarioEffettivoArrivoDescrizione': None, 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': '10', 'binarioEffettivoPartenzaCodice': None, 'binarioEffettivoPartenzaTipo': None, 'binarioEffettivoPartenzaDescrizione': None, 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': None, 'tipoFermata': 'A', 'visualizzaPrevista': True, 'nextChanged': False, 'nextTrattaType': 2, 'actualFermataType': 0}], 'anormalita': None, 'provvedimenti': None, 'segnalazioni': None, 'oraUltimoRilevamento': 1549194540000, 'stazioneUltimoRilevamento': 'CISTERNA DI LATINA', 'idDestinazione': 'S08409', 'idOrigine': 'S09150', 'cambiNumero': [], 'hasProvvedimenti': False, 'descOrientamento': ['--', '--', '--', '--', '--', '--', '--', '--', '--'], 'compOraUltimoRilevamento': '12:49', 'motivoRitardoPrevalente': None, 'descrizioneVCO': '', 'numeroTreno': 12280, 'categoria': 'REG', 'categoriaDescrizione': None, 'origine': 'MINTURNO', 'codOrigine': None, 'destinazione': 'ROMA TERMINI', 'codDestinazione': None, 'origineEstera': None, 'destinazioneEstera': None, 'oraPartenzaEstera': None, 'oraArrivoEstera': None, 'tratta': 0, 'regione': 0, 'origineZero': 'MINTURNO', 'destinazioneZero': 'ROMA TERMINI', 'orarioPartenzaZero': 1549190280000, 'orarioArrivoZero': 1549196640000, 'circolante': True, 'binarioEffettivoArrivoCodice': None, 'binarioEffettivoArrivoDescrizione': None, 'binarioEffettivoArrivoTipo': None, 'binarioProgrammatoArrivoCodice': None, 'binarioProgrammatoArrivoDescrizione': None, 'binarioEffettivoPartenzaCodice': None, 'binarioEffettivoPartenzaDescrizione': None, 'binarioEffettivoPartenzaTipo': None, 'binarioProgrammatoPartenzaCodice': None, 'binarioProgrammatoPartenzaDescrizione': None, 'subTitle': '', 'esisteCorsaZero': '0', 'inStazione': False, 'haCambiNumero': False, 'nonPartito': False, 'provvedimento': 0, 'riprogrammazione': None, 'orarioPartenza': 1549190280000, 'orarioArrivo': 1549196640000, 'stazionePartenza': None, 'stazioneArrivo': None, 'statoTreno': None, 'corrispondenze': None, 'servizi': [], 'ritardo': 2, 'tipoProdotto': '', 'compOrarioPartenzaZeroEffettivo': '11:40', 'compOrarioArrivoZeroEffettivo': '13:26', 'compOrarioPartenzaZero': '11:38', 'compOrarioArrivoZero': '13:24', 'compOrarioArrivo': '13:24', 'compOrarioPartenza': '11:38', 'compNumeroTreno': 'REG 12280', 'compOrientamento': ['--', '--', '--', '--', '--', '--', '--', '--', '--'], 'compTipologiaTreno': 'regionale', 'compClassRitardoTxt': '', 'compClassRitardoLine': 'regolare_line', 'compImgRitardo2': '', 'compImgRitardo': '/vt_static/img/legenda/icone_legenda/regolare.png', 'compRitardo': ['ritardo 2 min.', 'delay 2 min.', 'Versp&#228;tung 2 Min.', 'retard de 2 min.', 'retraso de 2 min.', '&icirc;nt&acirc;rziere 2 min.', '遅延 2 分', '误点 2分钟', 'опоздание на 2 минут'], 'compRitardoAndamento': ['con un ritardo di 2 min.', '2 minutes late', 'mit einer Verz&#246;gerung von 2 Min.', 'avec un retard de 2 min.', 'con un retraso de 2 min.', 'cu o &icirc;nt&acirc;rziere de 2 min.', '2 分の遅延', '误点 2分钟', 'с опозданием в 2 минут'], 'compInStazionePartenza': ['', '', '', '', '', '', '', '', ''], 'compInStazioneArrivo': ['', '', '', '', '', '', '', '', ''], 'compOrarioEffettivoArrivo': '/vt_static/img/legenda/icone_legenda/regolare.png13:26', 'compDurata': '1:46', 'compImgCambiNumerazione': '&nbsp;&nbsp;'}
        cls.train = Train(id=1, code='12280', depart_stat='S09150', depart_date=datetime.now() + timedelta(hours=2), user="1", checked=0, check_daily=True, check_interval="lun,mar,mer,gio-dom")

    @classmethod
    def tearDownClass(cls):
        cls.conn.close()

    def test_get_interval_days(self):
        result_1 = list(_get_interval_days("lun", "ven"))
        self.assertEqual(result_1, ["mar", "mer", "gio"])
        result_2 = list(_get_interval_days("sab", "mar"))
        self.assertEqual(result_2, ["dom", "lun"])
        result_3 = list(_get_interval_days("mer", "dom"))
        self.assertEqual(result_3, ["gio", "ven", "sab"])

    def test_interval_days_regex(self):
        test1 = "lun,mar,mer,ven-sab"
        test2 = "sab-lun,mer,gio,ven"
        test3 = "lun-ven"
        test4 = "lun,mar,mer"
        test5 = "lun-mer,ven"
        test6 = "lun"

        match1 = interval_pattern.match(test1)
        match2 = interval_pattern.match(test2)
        match3 = interval_pattern.match(test3)
        match4 = interval_pattern.match(test4)
        match5 = interval_pattern.match(test5)
        match6 = interval_pattern.match(test6)

        self.assertTrue(all([match1, match2, match3, match4, match5]))
        self.assertEqual(match1.group("days"), "lun,mar,mer,")
        self.assertEqual(match1.group("interval"), "ven-sab")
        self.assertEqual(match2.group("days"), "mer,gio,ven")
        self.assertEqual(match2.group("interval"), "sab-lun")
        self.assertEqual(match3.group("days"), "")
        self.assertEqual(match3.group("interval"), "lun-ven")
        self.assertEqual(match4.group("days"), "lun,mar,mer")
        self.assertEqual(match4.group("interval"), None)
        self.assertEqual(match5.group("days"), "ven")
        self.assertEqual(match5.group("interval"), "lun-mer")
        self.assertEqual(match6.group("days"), "lun")

    def test_is_in_day_interval(self):
        test1 = "lun,mar,mer,ven-sab"
        test2 = "sab-lun,mer,gio,ven"
        test3 = "lun-ven"
        test4 = "lun,mar,mer"

        matches = [interval_pattern.match(test1), interval_pattern.match(test2), interval_pattern.match(test3), interval_pattern.match(test4)]

        for match in matches:
            self.assertTrue(_is_in_day_interval(match.group("days"), match.group("interval"), days_mapping["lun"]))

        self.assertTrue(_is_in_day_interval(matches[0].group("days"), matches[0].group("interval"), days_mapping["sab"]))
        self.assertTrue(_is_in_day_interval(matches[1].group("days"), matches[1].group("interval"), days_mapping["dom"]))
        self.assertFalse(_is_in_day_interval(matches[2].group("days"), matches[2].group("interval"), days_mapping["sab"]))
        self.assertTrue(_is_in_day_interval(matches[3].group("days"), matches[3].group("interval"), days_mapping["mer"]))
        self.assertTrue(_is_in_day_interval(matches[3].group("days"), matches[3].group("interval"), days_mapping["mar"]))

    def test_is_daily_update_to_be_sent(self):
        train2 = Train(id=1, code='12280', depart_stat='S09150', depart_date=datetime.now(), user="1", checked=0, check_daily=True, check_interval="lun,mar,mer,gio-dom")
        train3 = Train(id=1, code='12280', depart_stat='S09150', depart_date=datetime.now(), user="1", checked=0, check_daily=False, check_interval="lun,mar,mer,gio-dom")
        self.assertTrue(_is_daily_update_to_be_sent(self.train))
        self.assertFalse(_is_daily_update_to_be_sent(train2))
        self.assertFalse(_is_daily_update_to_be_sent(train3))


if __name__ == '__main__':
    unittest.main()
